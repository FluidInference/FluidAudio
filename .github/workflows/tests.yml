name: Build and Test

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cross-platform-build:
    name: Cross-Platform Build Check
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check Swift version
        run: swift --version
      
      - name: Build for macOS
        run: |
          echo "Building for macOS..."
          swift build --product FluidAudio
      
      - name: Clean build artifacts
        run: rm -rf .build .swiftpm
      
      - name: Build for iOS Simulator
        run: |
          echo "Building for iOS Simulator..."
          swift build --product FluidAudio \
            --sdk $(xcrun --sdk iphonesimulator --show-sdk-path) \
            --triple arm64-apple-ios16.0-simulator \
            -Xswiftc -target -Xswiftc arm64-apple-ios16.0-simulator
      
      - name: Clean build artifacts
        run: rm -rf .build .swiftpm
      
      - name: Build for iOS Device
        run: |
          echo "Building for iOS Device..."
          swift build --product FluidAudio \
            --sdk $(xcrun --sdk iphoneos --show-sdk-path) \
            --triple arm64-apple-ios16.0 \
            -Xswiftc -target -Xswiftc arm64-apple-ios16.0

  build-and-test-macos:
    name: Build and Test Swift Package (macOS)
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check versions and directory structure
        run: |
          swift --version
          xcodebuild -version
          echo "=== Repository structure ==="
          find . -name "Tests" -type d
          echo "=== Root directory contents ==="
          ls -la
          echo "=== Looking for Tests anywhere ==="
          find . -name "*Tests*" -type d
          echo "=== Checking if Tests exists ==="
          if [ -d "Tests" ]; then
            echo "Tests directory exists"
            ls -la Tests/
          else
            echo "Tests directory does not exist"
          fi

      - name: Build package
        run: swift build

      - name: Run tests
        run: swift test --parallel --num-workers $(sysctl -n hw.ncpu)
        timeout-minutes: 10

  build-ios-library:
    name: Build FluidAudio Library (iOS)
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check versions and debug
        run: |
          swift --version
          xcodebuild -version
          echo "=== Root directory contents ==="
          ls -la
          echo "=== Package.swift contents ==="
          cat Package.swift

      - name: Clean up any build artifacts
        run: |
          rm -rf .swiftpm .build

      - name: Build iOS library using Swift PM (simulator)
        run: |
          set -e
          echo "Building FluidAudio library for iOS Simulator using Swift Package Manager..."
          swift build --product FluidAudio \
            --sdk $(xcrun --sdk iphonesimulator --show-sdk-path) \
            --triple arm64-apple-ios16.0-simulator \
            -Xswiftc -target -Xswiftc arm64-apple-ios16.0-simulator

      - name: Clean up build artifacts
        run: |
          rm -rf .swiftpm .build

      - name: Build iOS library (simulator with xcodebuild)
        run: |
          set -e
          echo "Building FluidAudio library for iOS Simulator with xcodebuild..."
          xcodebuild -scheme FluidAudio -destination 'platform=iOS Simulator,name=Any iOS Simulator Device' build

      - name: Clean up build artifacts
        run: |
          rm -rf .swiftpm .build

      - name: Build iOS library (device)
        run: |
          set -e
          echo "Building FluidAudio library for iOS Device..."
          xcodebuild -scheme FluidAudio -destination 'platform=iOS,name=Any iOS Device' build
