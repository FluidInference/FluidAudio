name: Build and Test

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cross-platform-build:
    name: Cross-Platform Build Check
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - uses: swift-actions/setup-swift@v2
        with:
          swift-version: "6.1"
      
      - name: Build for macOS
        run: |
          echo "Building for macOS..."
          swift build --product FluidAudio
      
      - name: Clean build artifacts
        run: rm -rf .build .swiftpm
      
      - name: List available simulators and runtimes
        run: |
          echo "=== Available simulators ==="
          xcrun simctl list devices available
          echo "=== Available runtimes ==="  
          xcrun simctl list runtimes
          
      - name: Build for iOS Simulator
        run: |
          echo "Building FluidAudio library for iOS Simulator using xcodebuild..."
          xcodebuild -scheme FluidAudio \
            -destination 'generic/platform=iOS Simulator' \
            -derivedDataPath .build/ios-simulator \
            build
      
      - name: Build for iOS Device
        run: |
          echo "Building for iOS Device..."
          xcodebuild -scheme FluidAudio \
            -destination 'generic/platform=iOS' \
            -derivedDataPath .build/ios-device \
            build

  build-and-test-macos:
    name: Build and Test Swift Package (macOS)
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - uses: swift-actions/setup-swift@v2
        with:
          swift-version: "6.1"

      - name: Check versions and directory structure
        run: |
          swift --version
          xcodebuild -version
          echo "=== Repository structure ==="
          find . -name "Tests" -type d
          echo "=== Root directory contents ==="
          ls -la
          echo "=== Looking for Tests anywhere ==="
          find . -name "*Tests*" -type d
          echo "=== Checking if Tests exists ==="
          if [ -d "Tests" ]; then
            echo "Tests directory exists"
            ls -la Tests/
          else
            echo "Tests directory does not exist"
          fi

      - name: Build package
        run: swift build

      - name: Run tests
        run: swift test --parallel --num-workers $(sysctl -n hw.ncpu)
        timeout-minutes: 10

  build-ios-library:
    name: Build FluidAudio Library (iOS)
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - uses: swift-actions/setup-swift@v2
        with:
          swift-version: "6.1"

      - name: Check versions and debug
        run: |
          swift --version
          xcodebuild -version
          echo "=== Root directory contents ==="
          ls -la
          echo "=== Package.swift contents ==="
          cat Package.swift

      - name: Clean up any build artifacts
        run: |
          rm -rf .swiftpm .build

      - name: Build for iOS Simulator  
        run: |
          echo "Building FluidAudio library for iOS Simulator using xcodebuild..."
          xcodebuild -scheme FluidAudio \
            -destination 'generic/platform=iOS Simulator' \
            -derivedDataPath .build/ios-simulator \
            build
